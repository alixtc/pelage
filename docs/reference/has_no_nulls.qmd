# has_no_nulls { #pelage.has_no_nulls }

```python
has_no_nulls(data, columns=None)
```

Check if a DataFrame has any null (missing) values.

## Parameters {.doc-section .doc-section-parameters}

<code><span class="parameter-name">data</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[PolarsLazyOrDataFrame](`pelage.types.PolarsLazyOrDataFrame`)</span></code>

:   The input DataFrame to check for null values.

<code><span class="parameter-name">columns</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[PolarsColumnType](`pelage.types.PolarsColumnType`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Columns to consider for null value check. By default, all columns are checked.

## Returns {.doc-section .doc-section-returns}

| Name   | Type                                                          | Description                                                      |
|--------|---------------------------------------------------------------|------------------------------------------------------------------|
|        | [PolarsLazyOrDataFrame](`pelage.types.PolarsLazyOrDataFrame`) | The original polars DataFrame or LazyFrame when the check passes |

## Examples {.doc-section .doc-section-examples}

```python
>>> import polars as pl
>>> import pelage as plg
>>> df = pl.DataFrame({
...     "A": [1, 2],
...     "B": [None, 5]
... })
>>> df
shape: (2, 2)
┌─────┬──────┐
│ A   ┆ B    │
│ --- ┆ ---  │
│ i64 ┆ i64  │
╞═════╪══════╡
│ 1   ┆ null │
│ 2   ┆ 5    │
└─────┴──────┘
>>> df.pipe(plg.has_no_nulls)
Traceback (most recent call last):
    ...
pelage.types.PolarsAssertError: Details
shape: (1, 2)
┌────────┬────────────┐
│ column ┆ null_count │
│ ---    ┆ ---        │
│ str    ┆ u32        │
╞════════╪════════════╡
│ B      ┆ 1          │
└────────┴────────────┘
Error with the DataFrame passed to the check function:
--> There were unexpected nulls in the columns above
```
